{
  "timestamp": "2025-09-27 14:27:50",
  "summary": {
    "total_checks": 7,
    "successful_checks": 6,
    "failed_checks": 1,
    "checks_with_issues": 1,
    "results": [
      {
        "name": "リンター問題チェック（Ruff）",
        "success": true,
        "has_issues": false,
        "return_code": 0,
        "output_lines": 1,
        "error_lines": 0
      },
      {
        "name": "型チェック問題（mypy）",
        "success": false,
        "has_issues": true,
        "return_code": 2,
        "output_lines": 2,
        "error_lines": 0
      },
      {
        "name": "テスト実行チェック（pytest）",
        "success": true,
        "has_issues": false,
        "return_code": 1,
        "output_lines": 79,
        "error_lines": 0
      },
      {
        "name": "セキュリティ問題チェック（safety）",
        "success": true,
        "has_issues": false,
        "return_code": 0,
        "output_lines": 57,
        "error_lines": 0
      },
      {
        "name": "コード複雑度チェック（radon）",
        "success": true,
        "has_issues": false,
        "return_code": 0,
        "output_lines": 355,
        "error_lines": 0
      },
      {
        "name": "docstringカバレッジチェック（interrogate）",
        "success": true,
        "has_issues": false,
        "return_code": 0,
        "output_lines": 1,
        "error_lines": 0
      },
      {
        "name": "依存関係整合性チェック",
        "success": true,
        "has_issues": false,
        "return_code": 0,
        "output_lines": 1,
        "error_lines": 0
      }
    ]
  },
  "detailed_results": [
    {
      "name": "リンター問題チェック（Ruff）",
      "success": true,
      "has_issues": false,
      "return_code": 0,
      "output": "All checks passed!",
      "error_output": ""
    },
    {
      "name": "型チェック問題（mypy）",
      "success": false,
      "has_issues": true,
      "return_code": 2,
      "output": "schemas/yaml_type_spec.py: error: Source file found twice under different module names: \"pylay.schemas.yaml_type_spec\" and \"schemas.yaml_type_spec\"\nFound 1 error in 1 file (errors prevented further checking)",
      "error_output": ""
    },
    {
      "name": "テスト実行チェック（pytest）",
      "success": true,
      "has_issues": false,
      "return_code": 1,
      "output": "============================= test session starts ==============================\nplatform linux -- Python 3.13.5, pytest-8.4.2, pluggy-1.6.0\nrootdir: /home/biwakonbu/github/pylay\nconfigfile: pyproject.toml\nplugins: xdist-3.8.0, anyio-4.11.0, cov-7.0.0\ncollected 110 items\n\ntests/test_generate_test_docs.py .F.......                               [  8%]\ntests/test_generate_type_docs.py .F.....F                                [ 15%]\ntests/test_integration_doc_generators.py .............                   [ 27%]\ntests/test_refactored_generate_test_docs.py ...F.FF.F..F..............   [ 50%]\ntests/test_refactored_generate_type_docs.py ............................ [ 76%]\n.............                                                            [ 88%]\ntests/test_type_management.py ........F....                              [100%]\n\n=================================== FAILURES ===================================\n________ TestGenerateTestDocs.test_generate_test_docs_with_no_docstring ________\ntests/test_generate_test_docs.py:50: in test_generate_test_docs_with_no_docstring\n    assert \"静的レジストリ構築テスト\" in content  # docstringがある場合\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE   AssertionError: assert '静的レジストリ構築テスト' in '# テストカタログ\\n\\n**生成日**: 2025-09-27T14:27:46.093117\\n\\n## test_generate_test_docs.py\\n\\n### TestGenerateTestDocs.test_ge...説明**: 説明なし\\n\\n**実行**: `pytest tests/test_type_management.py::test_yaml_to_spec_and_validate -v`\\n\\n**総テストモジュール数**: 7\\n'\n----------------------------- Captured stdout call -----------------------------\n✅ Generated /tmp/tmpf37g7efs/test_catalog.md: 7 modules\n__________ TestGenerateTypeDocs.test_generate_layer_docs_skip_newtype __________\ntests/test_generate_type_docs.py:54: in test_generate_layer_docs_skip_newtype\n    assert \"UserId\" in content\nE   assert 'UserId' in \"# PRIMITIVES レイヤー型カタログ（完全自動成長）\\n\\n## 🎯 完全自動成長について\\n\\nこのレイヤーの型は、定義を追加するだけで自動的に利用可能になります。\\n新しい型を追加すると、以下の方法ですぐに使用できます：\\...'NoneType')\\n```\\n\\n### 型定義\\n```python\\nNoneType (型情報: <class 'NoneType'>)\\n```\\n**生成日**: 2025-09-27T14:27:46.126057\\n\"\n----------------------------- Captured stdout call -----------------------------\n✅ Generated /tmp/tmp0xo24nqx/docs/types/primitives.md: 6 types\n___ TestGenerateTypeDocsPerformance.test_generate_layer_docs_large_registry ____\ntests/test_generate_type_docs.py:162: in test_generate_layer_docs_large_registry\n    assert \"UserId\" in content\nE   assert 'UserId' in \"# PRIMITIVES レイヤー型カタログ（完全自動成長）\\n\\n## 🎯 完全自動成長について\\n\\nこのレイヤーの型は、定義を追加するだけで自動的に利用可能になります。\\n新しい型を追加すると、以下の方法ですぐに使用できます：\\...'NoneType')\\n```\\n\\n### 型定義\\n```python\\nNoneType (型情報: <class 'NoneType'>)\\n```\\n**生成日**: 2025-09-27T14:27:46.134101\\n\"\n----------------------------- Captured stdout call -----------------------------\n✅ Generated /tmp/tmpq63h5m80/docs/types/primitives.md: 6 types\n___________ TestCatalogGenerator.test_generate_handles_test_classes ____________\ntests/test_refactored_generate_test_docs.py:81: in test_generate_handles_test_classes\n    assert \"TestGenerateTestDocs\" in content\nE   AssertionError: assert 'TestGenerateTestDocs' in '# テストカタログ\\n\\n**生成日**: 2025-09-27T14:27:46.169840\\n\\n**総テストモジュール数**: 0\\n'\n----------------------------- Captured stdout call -----------------------------\n✅ Generated /test/output/catalog.md: 0 modules\n________ TestCatalogGenerator.test_scan_test_modules_filters_correctly _________\ntests/test_refactored_generate_test_docs.py:113: in test_scan_test_modules_filters_correctly\n    assert len(test_files) > 0\nE   assert 0 > 0\nE    +  where 0 = len([])\n________ TestCatalogGenerator.test_extract_test_functions_finds_methods ________\ntests/test_refactored_generate_test_docs.py:119: in test_extract_test_functions_finds_methods\n    from tests.scripts import test_generate_test_docs\nE   ModuleNotFoundError: No module named 'tests.scripts'\n____________ TestCatalogGenerator.test_count_test_modules_accurate _____________\ntests/test_refactored_generate_test_docs.py:167: in test_count_test_modules_accurate\n    assert count >= 2  # At least test_generate_test_docs and test_generate_type_docs\n    ^^^^^^^^^^^^^^^^^\nE   assert 0 >= 2\n_______ TestCatalogGeneratorErrorHandling.test_handles_recursion_errors ________\ntests/test_refactored_generate_test_docs.py:235: in test_handles_recursion_errors\n    assert \"⚠️ モジュールの処理に失敗\" in content\nE   AssertionError: assert '⚠️ モジュールの処理に失敗' in '# テストカタログ\\n\\n**生成日**: 2025-09-27T14:27:46.186756\\n\\n**総テストモジュール数**: 0\\n'\n----------------------------- Captured stdout call -----------------------------\n✅ Generated /test/catalog.md: 0 modules\n____________________________ test_nested_structures ____________________________\ntests/test_type_management.py:285: in test_nested_structures\n    assert 'value' in inner_dict_spec.properties\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv/lib/python3.13/site-packages/pydantic/main.py:991: in __getattr__\n    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')\nE   AttributeError: 'TypeSpec' object has no attribute 'properties'\n=========================== short test summary info ============================\nFAILED tests/test_generate_test_docs.py::TestGenerateTestDocs::test_generate_test_docs_with_no_docstring\nFAILED tests/test_generate_type_docs.py::TestGenerateTypeDocs::test_generate_layer_docs_skip_newtype\nFAILED tests/test_generate_type_docs.py::TestGenerateTypeDocsPerformance::test_generate_layer_docs_large_registry\nFAILED tests/test_refactored_generate_test_docs.py::TestCatalogGenerator::test_generate_handles_test_classes\nFAILED tests/test_refactored_generate_test_docs.py::TestCatalogGenerator::test_scan_test_modules_filters_correctly\nFAILED tests/test_refactored_generate_test_docs.py::TestCatalogGenerator::test_extract_test_functions_finds_methods\nFAILED tests/test_refactored_generate_test_docs.py::TestCatalogGenerator::test_count_test_modules_accurate\nFAILED tests/test_refactored_generate_test_docs.py::TestCatalogGeneratorErrorHandling::test_handles_recursion_errors\nFAILED tests/test_type_management.py::test_nested_structures - AttributeError...\n======================== 9 failed, 101 passed in 0.29s =========================",
      "error_output": ""
    },
    {
      "name": "セキュリティ問題チェック（safety）",
      "success": true,
      "has_issues": false,
      "return_code": 0,
      "output": "\u001b[33m\u001b[1m+===========================================================================================================================================================================================+\u001b[0m\n\n\n\u001b[31m\u001b[1mDEPRECATED: \u001b[0m\u001b[33m\u001b[1mthis command (`check`) has been DEPRECATED, and will be unsupported beyond 01 June 2024.\u001b[0m\n\n\n\u001b[32mWe highly encourage switching to the new \u001b[0m\u001b[32m\u001b[1m`scan`\u001b[0m\u001b[32m command which is easier to use, more powerful, and can be set up to mimic the deprecated command if required.\u001b[0m\n\n\n\u001b[33m\u001b[1m+===========================================================================================================================================================================================+\u001b[0m\n\n\n+==============================================================================+\n\n                               /$$$$$$            /$$\n                              /$$__  $$          | $$\n           /$$$$$$$  /$$$$$$ | $$  \\__//$$$$$$  /$$$$$$   /$$   /$$\n          /$$_____/ |____  $$| $$$$   /$$__  $$|_  $$_/  | $$  | $$\n         |  $$$$$$   /$$$$$$$| $$_/  | $$$$$$$$  | $$    | $$  | $$\n          \\____  $$ /$$__  $$| $$    | $$_____/  | $$ /$$| $$  | $$\n          /$$$$$$$/|  $$$$$$$| $$    |  $$$$$$$  |  $$$$/|  $$$$$$$\n         |_______/  \\_______/|__/     \\_______/   \\___/   \\____  $$\n                                                          /$$  | $$\n                                                         |  $$$$$$/\n  by safetycli.com                                        \\______/\n\n+==============================================================================+\n\n \u001b[1mREPORT\u001b[0m \n\n  Safety \u001b[1mv3.6.2\u001b[0m is scanning for \u001b[1mVulnerabilities\u001b[0m\u001b[1m...\u001b[0m\n\u001b[1m  Scanning dependencies\u001b[0m in your \u001b[1mfiles:\u001b[0m\n\n  -> pyproject.toml\n\n  Using \u001b[1mopen-source vulnerability database\u001b[0m\n\u001b[1m  No packages found\u001b[0m\n  Timestamp \u001b[1m2025-09-27 14:27:49\u001b[0m\n\u001b[1m  0\u001b[0m\u001b[1m vulnerabilities reported\u001b[0m\n\u001b[1m  0\u001b[0m\u001b[1m vulnerabilities ignored\u001b[0m\n+==============================================================================+\n\n \u001b[32m\u001b[1mNo known security vulnerabilities reported.\u001b[0m \n\n+==============================================================================+\u001b[0m\n\n\n\u001b[33m\u001b[1m+===========================================================================================================================================================================================+\u001b[0m\n\n\n\u001b[31m\u001b[1mDEPRECATED: \u001b[0m\u001b[33m\u001b[1mthis command (`check`) has been DEPRECATED, and will be unsupported beyond 01 June 2024.\u001b[0m\n\n\n\u001b[32mWe highly encourage switching to the new \u001b[0m\u001b[32m\u001b[1m`scan`\u001b[0m\u001b[32m command which is easier to use, more powerful, and can be set up to mimic the deprecated command if required.\u001b[0m\n\n\n\u001b[33m\u001b[1m+===========================================================================================================================================================================================+\u001b[0m",
      "error_output": ""
    },
    {
      "name": "コード複雑度チェック（radon）",
      "success": true,
      "has_issues": false,
      "return_code": 0,
      "output": "generate_yaml_docs.py\n    F 5:0 generate_yaml_docs_from_file - A (1)\ngenerate_test_docs.py\n    F 15:0 generate_test_docs - A (1)\ngenerate_type_docs.py\n    F 46:0 generate_docs - A (4)\n    F 17:0 generate_layer_docs - A (1)\n    F 34:0 generate_index_docs - A (1)\ndoc_generators/yaml_doc_generator.py\n    M 28:4 YamlDocGenerator._generate_body - B (6)\n    C 9:0 YamlDocGenerator - A (3)\n    M 23:4 YamlDocGenerator._generate_header - A (2)\n    F 54:0 generate_yaml_docs - A (1)\n    M 12:4 YamlDocGenerator.generate - A (1)\n    M 45:4 YamlDocGenerator._generate_footer - A (1)\n    M 49:4 YamlDocGenerator._spec_to_yaml - A (1)\ndoc_generators/filesystem.py\n    M 60:4 InMemoryFileSystem.mkdir - A (5)\n    C 44:0 InMemoryFileSystem - A (3)\n    C 9:0 FileSystemInterface - A (2)\n    C 28:0 RealFileSystem - A (2)\n    M 52:4 InMemoryFileSystem.write_text - A (2)\n    M 74:4 InMemoryFileSystem.exists - A (2)\n    M 78:4 InMemoryFileSystem.get_content - A (2)\n    M 13:4 FileSystemInterface.write_text - A (1)\n    M 18:4 FileSystemInterface.mkdir - A (1)\n    M 23:4 FileSystemInterface.exists - A (1)\n    M 31:4 RealFileSystem.write_text - A (1)\n    M 35:4 RealFileSystem.mkdir - A (1)\n    M 39:4 RealFileSystem.exists - A (1)\n    M 47:4 InMemoryFileSystem.__init__ - A (1)\n    M 84:4 InMemoryFileSystem.list_files - A (1)\ndoc_generators/test_catalog_generator.py\n    M 148:4 CatalogGenerator._extract_test_functions - B (8)\n    M 15:4 CatalogGenerator.__init__ - B (6)\n    M 123:4 CatalogGenerator._scan_test_modules - B (6)\n    M 177:4 CatalogGenerator._import_module - A (5)\n    C 12:0 CatalogGenerator - A (4)\n    M 76:4 CatalogGenerator._generate_module_section - A (3)\n    M 212:4 CatalogGenerator._count_test_modules - A (3)\n    M 40:4 CatalogGenerator.generate - A (2)\n    M 69:4 CatalogGenerator._generate_test_modules - A (2)\n    M 95:4 CatalogGenerator._generate_test_function_entry - A (2)\n    M 63:4 CatalogGenerator._generate_header - A (1)\n    M 118:4 CatalogGenerator._generate_summary - A (1)\ndoc_generators/type_doc_generator.py\n    M 122:4 LayerDocGenerator._generate_type_sections - B (7)\n    M 166:4 LayerDocGenerator._generate_type_description - B (7)\n    M 14:4 LayerDocGenerator.__init__ - B (6)\n    M 271:4 IndexDocGenerator.__init__ - B (6)\n    C 11:0 LayerDocGenerator - A (4)\n    M 204:4 LayerDocGenerator._generate_usage_examples - A (4)\n    M 243:4 LayerDocGenerator._generate_type_definition - A (3)\n    C 268:0 IndexDocGenerator - A (3)\n    M 296:4 IndexDocGenerator.generate - A (3)\n    M 369:4 IndexDocGenerator._generate_single_layer_section - A (3)\n    M 40:4 LayerDocGenerator.generate - A (2)\n    M 105:4 LayerDocGenerator._generate_layer_specific_section - A (2)\n    M 356:4 IndexDocGenerator._generate_layer_sections - A (2)\n    M 399:4 IndexDocGenerator._generate_statistics - A (2)\n    M 75:4 LayerDocGenerator._generate_header - A (1)\n    M 84:4 LayerDocGenerator._generate_auto_growth_section - A (1)\n    M 142:4 LayerDocGenerator._generate_single_type_section - A (1)\n    M 231:4 LayerDocGenerator._generate_layer_method_example - A (1)\n    M 262:4 LayerDocGenerator._add_footer - A (1)\n    M 329:4 IndexDocGenerator._generate_header - A (1)\n    M 333:4 IndexDocGenerator._generate_unified_usage_section - A (1)\n    M 416:4 IndexDocGenerator._add_footer - A (1)\ndoc_generators/config.py\n    C 10:0 GeneratorConfig - A (1)\n    C 19:0 CatalogConfig - A (1)\n    C 29:0 TypeDocConfig - A (1)\ndoc_generators/base.py\n    C 11:0 DocumentGenerator - A (3)\n    M 14:4 DocumentGenerator.__init__ - A (3)\n    M 38:4 DocumentGenerator._ensure_output_directory - A (2)\n    M 52:4 DocumentGenerator._format_timestamp - A (2)\n    M 58:4 DocumentGenerator._format_generation_footer - A (2)\n    M 29:4 DocumentGenerator.generate - A (1)\n    M 47:4 DocumentGenerator._write_file - A (1)\ndoc_generators/type_inspector.py\n    M 159:4 TypeInspector.format_type_definition - B (8)\n    M 32:4 TypeInspector.extract_code_blocks - B (6)\n    C 10:0 TypeInspector - A (3)\n    M 79:4 TypeInspector.is_pydantic_model - A (3)\n    M 116:4 TypeInspector.get_pydantic_schema - A (3)\n    M 13:4 TypeInspector.__init__ - A (2)\n    M 134:4 TypeInspector.is_standard_newtype_doc - A (2)\n    M 21:4 TypeInspector.get_docstring - A (1)\n    M 68:4 TypeInspector.get_type_origin - A (1)\n    M 94:4 TypeInspector.is_newtype - A (1)\n    M 105:4 TypeInspector.get_newtype_supertype - A (1)\n    M 148:4 TypeInspector.should_skip_type - A (1)\ndoc_generators/markdown_builder.py\n    C 6:0 MarkdownBuilder - A (2)\n    M 13:4 MarkdownBuilder.heading - A (2)\n    M 65:4 MarkdownBuilder.table_header - A (2)\n    M 83:4 MarkdownBuilder.blockquote - A (2)\n    M 9:4 MarkdownBuilder.__init__ - A (1)\n    M 21:4 MarkdownBuilder.paragraph - A (1)\n    M 26:4 MarkdownBuilder.line_break - A (1)\n    M 31:4 MarkdownBuilder.code_block - A (1)\n    M 36:4 MarkdownBuilder.code_inline - A (1)\n    M 41:4 MarkdownBuilder.bullet_point - A (1)\n    M 47:4 MarkdownBuilder.numbered_list - A (1)\n    M 53:4 MarkdownBuilder.bold - A (1)\n    M 57:4 MarkdownBuilder.italic - A (1)\n    M 61:4 MarkdownBuilder.link - A (1)\n    M 72:4 MarkdownBuilder.table_row - A (1)\n    M 78:4 MarkdownBuilder.horizontal_rule - A (1)\n    M 90:4 MarkdownBuilder.raw - A (1)\n    M 95:4 MarkdownBuilder.build - A (1)\n    M 99:4 MarkdownBuilder.clear - A (1)\n    M 104:4 MarkdownBuilder.__str__ - A (1)\nconverters/yaml_to_type.py\n    F 86:0 _collect_refs_from_data - C (20)\n    F 202:0 validate_with_spec - C (18)\n    F 169:0 _collect_refs_from_spec - C (15)\n    F 8:0 yaml_to_spec - B (8)\n    F 55:0 _detect_circular_references_from_data - A (5)\n    F 138:0 _detect_circular_references - A (5)\n    F 120:0 _resolve_all_refs - A (3)\n    F 240:0 generate_pydantic_model - A (2)\nconverters/type_to_yaml.py\n    F 86:0 type_to_spec - C (18)\n    F 34:0 _get_field_docstring - B (8)\n    F 17:0 _get_type_name - A (4)\n    F 59:0 _get_class_properties_with_docstrings - A (4)\n    F 181:0 type_to_yaml - A (4)\n    F 203:0 types_to_yaml - A (3)\n    F 7:0 _get_basic_type_str - A (1)\n    F 30:0 _get_docstring - A (1)\nscripts/analyze_issues.py\n    M 194:4 ProjectAnalyzer.run_all_checks - B (10)\n    M 235:4 ProjectAnalyzer.print_summary - B (9)\n    M 43:4 ProjectAnalyzer.run_command - B (7)\n    F 290:0 main - A (4)\n    C 36:0 ProjectAnalyzer - A (4)\n    M 165:4 ProjectAnalyzer.check_coverage_report - A (2)\n    M 262:4 ProjectAnalyzer.save_report - A (2)\n    C 26:0 CheckResult - A (1)\n    M 39:4 ProjectAnalyzer.__init__ - A (1)\n    M 116:4 ProjectAnalyzer.check_linting - A (1)\n    M 123:4 ProjectAnalyzer.check_type_checking - A (1)\n    M 136:4 ProjectAnalyzer.check_tests - A (1)\n    M 144:4 ProjectAnalyzer.check_security - A (1)\n    M 151:4 ProjectAnalyzer.check_complexity - A (1)\n    M 158:4 ProjectAnalyzer.check_docstring_coverage - A (1)\n    M 187:4 ProjectAnalyzer.check_dependencies - A (1)\nschemas/yaml_type_spec.py\n    F 107:0 _preprocess_refs_for_yaml_parsing - C (12)\n    F 170:0 _preprocess_refs_for_spec_creation - C (12)\n    M 272:4 TypeContext._resolve_nested_refs - B (10)\n    M 239:4 TypeContext.resolve_ref - B (7)\n    F 140:0 _create_spec_from_data - B (6)\n    F 203:0 _create_spec_from_data_preserve_refs - B (6)\n    C 41:0 DictTypeSpec - B (6)\n    C 71:0 TypeRoot - B (6)\n    C 229:0 TypeContext - B (6)\n    M 49:4 DictTypeSpec.validate_properties_before - A (5)\n    M 77:4 TypeRoot.preprocess_types - A (5)\n    M 92:4 TypeRoot.validate_types - A (5)\n    C 7:0 RefPlaceholder - A (2)\n    M 18:4 RefPlaceholder.__eq__ - A (2)\n    M 9:4 RefPlaceholder.__init__ - A (1)\n    M 12:4 RefPlaceholder.__str__ - A (1)\n    M 15:4 RefPlaceholder.__repr__ - A (1)\n    M 24:4 RefPlaceholder.__get_pydantic_core_schema__ - A (1)\n    C 29:0 TypeSpec - A (1)\n    C 36:0 ListTypeSpec - A (1)\n    C 65:0 UnionTypeSpec - A (1)\n    M 231:4 TypeContext.__init__ - A (1)\n    M 235:4 TypeContext.add_type - A (1)\nschemas/type_index.py\n    F 46:0 get_type_layer - A (4)\n    F 29:0 build_registry - A (3)\n    F 70:0 register_type - A (2)\n    F 100:0 get_registry_stats - A (2)\n    F 82:0 get_layer_types - A (1)\n    F 95:0 get_all_layers - A (1)\ntests/test_generate_test_docs.py\n    M 22:4 TestGenerateTestDocs.test_generate_test_docs_with_valid_files - B (8)\n    C 10:0 TestGenerateTestDocs - A (5)\n    M 40:4 TestGenerateTestDocs.test_generate_test_docs_with_no_docstring - A (5)\n    M 123:4 TestGenerateTestDocsOutputFormat.test_output_includes_timestamp - A (5)\n    M 151:4 TestGenerateTestDocsOutputFormat.test_module_count_calculation - A (5)\n    M 52:4 TestGenerateTestDocs.test_generate_test_docs_with_empty_directory - A (4)\n    M 63:4 TestGenerateTestDocs.test_generate_test_docs_with_mixed_files - A (4)\n    M 86:4 TestGenerateTestDocsErrorHandling.test_generate_test_docs_with_invalid_module - A (4)\n    M 98:4 TestGenerateTestDocsErrorHandling.test_generate_test_docs_with_nonexistent_directory - A (4)\n    C 111:0 TestGenerateTestDocsOutputFormat - A (4)\n    C 76:0 TestGenerateTestDocsErrorHandling - A (3)\n    M 143:4 TestGenerateTestDocsOutputFormat.test_pytest_command_format - A (2)\n    M 13:4 TestGenerateTestDocs.setup_method - A (1)\n    M 18:4 TestGenerateTestDocs.teardown_method - A (1)\n    M 79:4 TestGenerateTestDocsErrorHandling.setup_method - A (1)\n    M 83:4 TestGenerateTestDocsErrorHandling.teardown_method - A (1)\n    M 114:4 TestGenerateTestDocsOutputFormat.setup_method - A (1)\n    M 120:4 TestGenerateTestDocsOutputFormat.teardown_method - A (1)\ntests/test_refactored_generate_type_docs.py\n    M 72:4 TestTypeInspector.test_extract_code_blocks_with_markdown - B (6)\n    M 132:4 TestTypeInspector.test_get_pydantic_schema - A (5)\n    M 200:4 TestLayerDocGenerator.test_generator_initialization - A (5)\n    M 386:4 TestIndexDocGenerator.test_generate_includes_layer_sections - A (5)\n    M 162:4 TestTypeInspector.test_format_type_definition_with_pydantic - A (4)\n    C 189:0 TestLayerDocGenerator - A (4)\n    M 244:4 TestLayerDocGenerator.test_generate_with_pydantic_types - A (4)\n    M 297:4 TestLayerDocGenerator.test_generate_layer_specific_usage - A (4)\n    C 330:0 TestIndexDocGenerator - A (4)\n    M 341:4 TestIndexDocGenerator.test_generator_initialization - A (4)\n    M 370:4 TestIndexDocGenerator.test_generate_includes_unified_usage_section - A (4)\n    C 565:0 TestConfigurationIntegration - A (4)\n    M 568:4 TestConfigurationIntegration.test_layer_generator_uses_config_skip_types - A (4)\n    C 38:0 TestTypeInspector - A (3)\n    M 97:4 TestTypeInspector.test_extract_code_blocks_without_markdown - A (3)\n    M 149:4 TestTypeInspector.test_is_standard_newtype_doc_detection - A (3)\n    M 157:4 TestTypeInspector.test_should_skip_type - A (3)\n    M 170:4 TestTypeInspector.test_format_type_definition_with_newtype - A (3)\n    M 178:4 TestTypeInspector.test_format_type_definition_fallback - A (3)\n    M 212:4 TestLayerDocGenerator.test_generate_creates_output_file - A (3)\n    M 228:4 TestLayerDocGenerator.test_generate_includes_auto_growth_section - A (3)\n    M 261:4 TestLayerDocGenerator.test_generate_with_custom_output_path - A (3)\n    M 277:4 TestLayerDocGenerator.test_generate_skips_configured_types - A (3)\n    M 352:4 TestIndexDocGenerator.test_generate_creates_output_file - A (3)\n    M 406:4 TestIndexDocGenerator.test_generate_includes_statistics - A (3)\n    M 424:4 TestIndexDocGenerator.test_generate_with_custom_output_path - A (3)\n    M 439:4 TestIndexDocGenerator.test_generate_layer_links - A (3)\n    M 454:4 TestIndexDocGenerator.test_generate_type_preview - A (3)\n    C 489:0 TestGeneratorErrorHandling - A (3)\n    M 497:4 TestGeneratorErrorHandling.test_layer_generator_handles_missing_docstring - A (3)\n    M 547:4 TestGeneratorErrorHandling.test_index_generator_handles_empty_registry - A (3)\n    M 590:4 TestConfigurationIntegration.test_layer_generator_uses_config_descriptions - A (3)\n    M 613:4 TestConfigurationIntegration.test_generators_use_config_output_directory - A (3)\n    M 45:4 TestTypeInspector.test_initialization_with_default_skip_types - A (2)\n    M 49:4 TestTypeInspector.test_initialization_with_custom_skip_types - A (2)\n    M 55:4 TestTypeInspector.test_get_docstring_from_class - A (2)\n    M 64:4 TestTypeInspector.test_get_docstring_from_class_without_docstring - A (2)\n    M 106:4 TestTypeInspector.test_is_pydantic_model_with_pydantic_class - A (2)\n    M 110:4 TestTypeInspector.test_is_pydantic_model_with_regular_class - A (2)\n    M 117:4 TestTypeInspector.test_is_newtype_with_mock_newtype - A (2)\n    M 122:4 TestTypeInspector.test_is_newtype_with_regular_type - A (2)\n    M 126:4 TestTypeInspector.test_get_newtype_supertype - A (2)\n    M 141:4 TestTypeInspector.test_get_pydantic_schema_with_non_pydantic - A (2)\n    M 314:4 TestLayerDocGenerator.test_generate_includes_footer - A (2)\n    M 474:4 TestIndexDocGenerator.test_generate_includes_footer - A (2)\n    M 518:4 TestGeneratorErrorHandling.test_layer_generator_handles_pydantic_schema_errors - A (2)\n    F 30:0 MockNewType - A (1)\n    C 24:0 MockPydanticModel - A (1)\n    M 41:4 TestTypeInspector.setup_method - A (1)\n    M 192:4 TestLayerDocGenerator.setup_method - A (1)\n    M 333:4 TestIndexDocGenerator.setup_method - A (1)\n    M 492:4 TestGeneratorErrorHandling.setup_method - A (1)\ntests/test_migrations.py\n    F 32:0 get_current_revision - B (6)\n    F 49:0 get_revision_history - B (6)\n    F 157:0 main - A (5)\n    F 89:0 migration_down_test - A (4)\n    F 19:0 run_command - A (3)\n    F 69:0 migration_up_test - A (3)\n    F 118:0 migration_up_again_test - A (3)\n    F 138:0 verify_schema_integrity - A (2)\ntests/test_type_management.py\n    F 381:0 test_complex_union_types - C (18)\n    F 333:0 test_basic_types - C (17)\n    F 219:0 test_nested_structures - C (13)\n    F 87:0 test_v1_1_multiple_types - C (12)\n    F 130:0 test_roundtrip_transparency - C (12)\n    F 293:0 test_field_level_docstrings - B (10)\n    F 16:0 test_build_registry - B (8)\n    F 45:0 test_yaml_to_spec_and_validate - B (6)\n    F 172:0 test_reference_resolution - A (4)\n    F 39:0 test_type_to_yaml - A (3)\n    F 67:0 test_roundtrip - A (3)\n    F 12:0 temp_dir - A (1)\n    F 196:0 test_circular_reference_detection - A (1)\n    F 433:0 test_error_handling - A (1)\ntests/test_generate_type_docs.py\n    M 24:4 TestGenerateTypeDocs.test_generate_layer_docs_with_valid_types - B (7)\n    M 140:4 TestGenerateTypeDocsPerformance.test_generate_layer_docs_large_registry - B (6)\n    C 127:0 TestGenerateTypeDocsPerformance - A (4)\n    C 11:0 TestGenerateTypeDocs - A (3)\n    M 46:4 TestGenerateTypeDocs.test_generate_layer_docs_skip_newtype - A (3)\n    M 70:4 TestGenerateTypeDocs.test_generate_layer_docs_creates_directory - A (3)\n    C 93:0 TestGenerateTypeDocsErrorHandling - A (3)\n    M 102:4 TestGenerateTypeDocsErrorHandling.test_generate_layer_docs_with_empty_registry - A (3)\n    M 114:4 TestGenerateTypeDocsErrorHandling.test_generate_layer_docs_with_invalid_output_path - A (3)\n    M 58:4 TestGenerateTypeDocs.test_generate_layer_docs_with_typealias_descriptions - A (2)\n    M 14:4 TestGenerateTypeDocs.setup_method - A (1)\n    M 20:4 TestGenerateTypeDocs.teardown_method - A (1)\n    M 80:4 TestGenerateTypeDocs.test_generate_docs_creates_index - A (1)\n    M 96:4 TestGenerateTypeDocsErrorHandling.setup_method - A (1)\n    M 99:4 TestGenerateTypeDocsErrorHandling.teardown_method - A (1)\n    M 130:4 TestGenerateTypeDocsPerformance.setup_method - A (1)\n    M 136:4 TestGenerateTypeDocsPerformance.teardown_method - A (1)\ntests/test_refactored_generate_test_docs.py\n    M 117:4 TestCatalogGenerator.test_extract_test_functions_finds_methods - B (7)\n    M 308:4 TestMarkdownBuilder.test_fluent_api_chaining - B (6)\n    M 53:4 TestCatalogGenerator.test_generate_includes_timestamp - A (5)\n    C 17:0 TestCatalogGenerator - A (4)\n    M 29:4 TestCatalogGenerator.test_generator_initialization - A (4)\n    M 69:4 TestCatalogGenerator.test_generate_handles_test_classes - A (4)\n    M 98:4 TestCatalogGenerator.test_scan_test_modules_filters_correctly - A (4)\n    M 291:4 TestMarkdownBuilder.test_formatting_helpers - A (4)\n    M 368:4 TestInMemoryFileSystem.test_list_files - A (4)\n    M 40:4 TestCatalogGenerator.test_generate_creates_output_file - A (3)\n    M 85:4 TestCatalogGenerator.test_generate_with_custom_output_path - A (3)\n    M 138:4 TestCatalogGenerator.test_import_module_handles_errors_gracefully - A (3)\n    M 169:4 TestCatalogGenerator.test_format_generation_footer - A (3)\n    C 182:0 TestCatalogGeneratorErrorHandling - A (3)\n    M 216:4 TestCatalogGeneratorErrorHandling.test_handles_recursion_errors - A (3)\n    C 238:0 TestMarkdownBuilder - A (3)\n    M 245:4 TestMarkdownBuilder.test_heading_generation - A (3)\n    M 325:4 TestMarkdownBuilder.test_clear_functionality - A (3)\n    C 334:0 TestInMemoryFileSystem - A (3)\n    M 341:4 TestInMemoryFileSystem.test_write_and_read_file - A (3)\n    M 359:4 TestInMemoryFileSystem.test_write_creates_parent_directories - A (3)\n    M 157:4 TestCatalogGenerator.test_count_test_modules_accurate - A (2)\n    M 193:4 TestCatalogGeneratorErrorHandling.test_handles_module_import_errors - A (2)\n    M 262:4 TestMarkdownBuilder.test_paragraph_and_line_break - A (2)\n    M 274:4 TestMarkdownBuilder.test_code_block - A (2)\n    M 280:4 TestMarkdownBuilder.test_bullet_points - A (2)\n    M 297:4 TestMarkdownBuilder.test_table_generation - A (2)\n    M 351:4 TestInMemoryFileSystem.test_mkdir_creates_directories - A (2)\n    M 20:4 TestCatalogGenerator.setup_method - A (1)\n    M 185:4 TestCatalogGeneratorErrorHandling.setup_method - A (1)\n    M 241:4 TestMarkdownBuilder.setup_method - A (1)\n    M 254:4 TestMarkdownBuilder.test_invalid_heading_level - A (1)\n    M 337:4 TestInMemoryFileSystem.setup_method - A (1)\n    M 383:4 TestInMemoryFileSystem.test_file_not_found_error - A (1)\ntests/test_integration_doc_generators.py\n    M 29:4 TestDocGeneratorsIntegration.test_both_generators_create_compatible_output - B (7)\n    M 55:4 TestDocGeneratorsIntegration.test_parallel_generation_workflow - B (7)\n    M 163:4 TestDocGeneratorsIntegration.test_content_quality_standards - B (7)\n    M 122:4 TestDocGeneratorsIntegration.test_output_directory_structure - B (6)\n    C 15:0 TestDocGeneratorsIntegration - A (5)\n    M 81:4 TestDocGeneratorsIntegration.test_shared_infrastructure_consistency - A (5)\n    M 248:4 TestBackwardCompatibility.test_output_format_unchanged - A (5)\n    M 104:4 TestDocGeneratorsIntegration.test_error_isolation_between_generators - A (4)\n    C 185:0 TestBackwardCompatibility - A (4)\n    M 237:4 TestBackwardCompatibility.test_existing_import_paths_work - A (4)\n    M 276:4 TestPerformanceIntegration.test_generation_performance_acceptable - A (4)\n    M 299:4 TestPerformanceIntegration.test_memory_usage_reasonable - A (4)\n    M 147:4 TestDocGeneratorsIntegration.test_configuration_consistency - A (3)\n    M 197:4 TestBackwardCompatibility.test_generate_test_docs_api_unchanged - A (3)\n    M 220:4 TestBackwardCompatibility.test_generate_type_docs_api_unchanged - A (3)\n    C 264:0 TestPerformanceIntegration - A (3)\n    M 18:4 TestDocGeneratorsIntegration.setup_method - A (1)\n    M 24:4 TestDocGeneratorsIntegration.teardown_method - A (1)\n    M 188:4 TestBackwardCompatibility.setup_method - A (1)\n    M 192:4 TestBackwardCompatibility.teardown_method - A (1)\n    M 267:4 TestPerformanceIntegration.setup_method - A (1)\n    M 271:4 TestPerformanceIntegration.teardown_method - A (1)\n\n329 blocks (classes, functions, methods) analyzed.\nAverage complexity: A (3.270516717325228)",
      "error_output": ""
    },
    {
      "name": "docstringカバレッジチェック（interrogate）",
      "success": true,
      "has_issues": false,
      "return_code": 0,
      "output": "RESULT: PASSED (minimum: 80.0%, actual: 89.0%)",
      "error_output": ""
    },
    {
      "name": "依存関係整合性チェック",
      "success": true,
      "has_issues": false,
      "return_code": 0,
      "output": "No broken requirements found.",
      "error_output": ""
    }
  ]
}